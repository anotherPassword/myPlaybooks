#powershell variables test
---
- name: Set Environment and Variables
  hosts: all
  vars: 
    #vars from survey have to be root level vars ###########
    vmName: ""
    OS: ""
    OS_Version: ""
    Application: ""
    Tier: ""
    Environment: ""
    Location: ""
    SQL: ""
    #END vars from survey ##########
    #set surveyVars to vars from survey to be able to pass to powershell ie JSON 
    surveyVars:    
      a_vmName: "{{vmName}}"
      a_OS: "{{OS}}"
      a_OS_Version: "{{OS_Version}}"
      a_Application: "{{Application}}"
      a_Tier: "{{Tier}}"
      a_Environment: "{{Environment}}"
      a_Location: "{{Location}}"
      a_SQL: "{{SQL}}"
      a_vcenter_CL_availableSubnets: ""

      #END set surveyVars #########

  vars_files:
  #- vars/surveyVars.yml
  - vars/vars.yml
 
  tasks:
  - name: "------ surveyVars are --------------------"
    debug: var=surveyVars
  #- meta: end_play

   ######## 
  - name: "set pshellScriptAction to getDatacenterForVM "
    set_fact:
      pshellScriptAction: getDatacenterForVM      
  - name: "Run script 'ansible_deployVM.ps1'"
    win_shell: D:\scripts\vSphere\ansible_deployVM.ps1 -pshellScriptAction "{{pshellScriptAction}}" -surveyVars "{{surveyVars }}" -userName '{{ ansible_user }}' -password '{{ ansible_password }}' -vm "{{vm }}" -networkAdapter "{{networkAdapter}}" -disk "{{disk}}" 
    register: result
  

  - name: "Process win_shell output"
    set_fact:
      vm: "{{ result.stdout | from_json }}"
  
  - name: "The vm variable with attached Datacenter is"
    debug: var=vm
  #########

#  - name: Create a virtual machine on given ESXi hostname
#    vmware_guest:
