#powershell variables test
---
- name: Set Environment and Variables
  hosts: all
  vars:
    pshellScriptAction: ""
    #vars from survey ###########
    vmName: ""
    OS: ""
    Application: ""
    Tier: ""
    Environment: ""
    Location: ""
    SQL: ""
    #END vars from survey ##########
    
  vars_files:
  - vars/surveyVars.yml
  - vars/vars.yml
 
  tasks:

 ########## GET CLUSTER BASED ON SURVEY
  - name: "set pshellScriptAction to getClusterBasedOnSurvey"
    set_fact:
      pshellScriptAction: getClusterBasedOnSurvey
  - name: "Run script 'ansible_deployVM.ps1' GET CLUSTER BASED ON SURVEY"
    win_shell: D:\scripts\vSphere\ansible_deployVM.ps1 -pshellScriptAction "{{pshellScriptAction}}" -surveyVars "{{surveyVars }}" -userName '{{ ansible_user }}' -password '{{ ansible_password }}' -vm "{{vm }}" -networkAdapter "{{networkAdapter}}" -disk "{{disk}}" 
    register: result
  
  - name: Process win_shell output
    set_fact:
      vm: "{{ result.stdout | from_json }}"
  
  - name: "the VM variable including Cluster Placement results are"
    debug: var=vm
  ######### GET NETWORKS FOR CLUSTER
  - name: "set pshellScriptAction to getNetworksForCluster"
    set_fact:
      pshellScriptAction: getNetworksForCluster
  - name: "Run script 'ansible_deployVM.ps1' and GET NETWORKS FOR CLUSTER"
    win_shell: D:\scripts\vSphere\ansible_deployVM.ps1 -pshellScriptAction "{{pshellScriptAction}}" -surveyVars "{{surveyVars }}" -userName '{{ ansible_user }}' -password '{{ ansible_password }}' -vm "{{vm }}" -networkAdapter "{{networkAdapter}}" -disk "{{disk}}" 
    register: result
  
  - name: Process win_shell output
    set_fact:
      surveyVars: "{{ result.stdout | from_json }}"
  
  - name: "The survey Vars are"
    debug: var=surveyVars

  ######## GET IP RESERVATION FOR NETWORK ADAPTER
  - name: "set pshellScriptAction to getIPReservationForNetworkAdapter"
    set_fact:
      pshellScriptAction: getIPReservationForNetworkAdapter
  - name: "Run script 'ansible_deployVM.ps1' GET IP AND SET IPAM RESERVATION FOR NETWORK ADAPTER"
    win_shell: D:\scripts\vSphere\ansible_deployVM.ps1 -pshellScriptAction "{{pshellScriptAction}}" -surveyVars "{{surveyVars }}" -userName '{{ ansible_user }}' -password '{{ ansible_password }}' -vm "{{vm }}" -networkAdapter "{{networkAdapter}}" -disk "{{disk}}" 
    register: result
  
  - name: Process win_shell output ipam
    set_fact:
      vm: "{{ result.stdout | from_json }}"
  
  - name: "vm with attache adapter IS"
    debug: var=vm
   ######## 
  - name: "set pshellScriptAction to getVMTemplate"
    set_fact:
      pshellScriptAction: getIPReservationForNetworkAdapter
  - name: "Run script 'ansible_deployVM.ps1' GET VM TEMPLATES FOR CLUSTER"
    win_shell: D:\scripts\vSphere\ansible_deployVM.ps1 -pshellScriptAction "{{pshellScriptAction}}" -surveyVars "{{surveyVars }}" -userName '{{ ansible_user }}' -password '{{ ansible_password }}' -vm "{{vm }}" -networkAdapter "{{networkAdapter}}" -disk "{{disk}}" 
    register: result
  
  - name: Process win_shell output ipam
    set_fact:
      vm: "{{ result.stdout | from_json }}"
  
  - name: "vm with attache adapter IS"
    debug: var=vm   