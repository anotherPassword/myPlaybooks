---
- name: 'Set powerstate of a virtual machine to poweroff or on'
  #run MODULE against localhost
  hosts: localhost
  vars:
    datacenter_name: "MSLAB"
    vm_name: "{{ VM_NAME }}"
 
  tasks:
    - name: 'gater VM facts to determine if power action needed'
      vmware_guest_facts:
        validate_certs: no
        datacenter: "{{ datacenter_name }}"
        name: "{{ VM_NAME }}"
        schema: "vsphere"
        properties: ["summary.runtime.powerState"]
      register: facts

    - set_fact: fPowerState={{ facts.instance.summary.runtime.powerState }} #use set_fact to set a variable outside of vars:
    
    - debug: 
        msg: 'Current power state is --> {{fPowerState}}'
    ############################################################################
    - block:
      - name: 'Power On VM when it is off'
        vmware_guest_powerstate:
          validate_certs: no
          name: "{{ VM_NAME }}"
          state: powered-on
        register: powerFact
        
      - set_fact:
          result_json: "{{powerFact | to_json}}"
      when: DESIRED_VM_POWER_STATE == 'On' and fPowerState == 'poweredOff'
    
    - block: 
      - name: 'Power Off VM when it is on'
        vmware_guest_powerstate:
          validate_certs: no
          name: "{{ VM_NAME }}"
          state: powered-off
        register: powerFact
         
      - set_fact:
          result_json: "{{powerFact | to_json}}"       
      when: DESIRED_VM_POWER_STATE == 'Off' and fPowerState == 'poweredOn'
    
    - name: 'VM power state changed. Result from set VM Power State'
      debug:  
        msg: "{{ result_json }}"
      when: result_json|bool == true
    
    - name: 'NO CHANGE TO POWER STATE'
      debug:  
        msg: "{{ result_json }}"
      when: result_json|bool == true      
